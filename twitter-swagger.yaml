openapi: 3.0.3
info:
  title: Swagger Twitter Clone - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_

    Some useful links:
    - [Twitter clone repository](https://github.com/swagger-api/swagger-petstore "Twitter clone project")
    - [The source API definition for the Twitter Clone Store](https://github.com/vanphuc7122001/api-social-network-basic/openapis)

  contact:
    email: dangvanphuc7122001@gmail.com
  version: 1.0.11
servers:
  - url: http://localhost:4000/api
tags:
  - name: users
    description: Các api liên quan đến users
  - name: medias
    description: Các api liên quan đến medias
  - name: tweets
    description: Các api liên quan đến tweets
  - name: bookmarks
    description: Các api liên quan đến bookmarks
  - name: likes
    description: Các api liên quan đến likes
  - name: search
    description: Các api liên quan đến search
  - name: friends
    description: Các api liên quan đến friends
  - name: conversations
    description: Các api liên quan đến conversations
paths:
  /users/register:
    post:
      tags:
        - users
      summary: Đăng ký
      description: Đăng ký một tài khoản người dùng
      operationId: registerUser
      requestBody:
        description: Tạo mới một tài khoản người dùng
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
        required: true
      responses:
        '200':
          description: Đăng ký thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Register successfull
                  result:
                    $ref: '#/components/schemas/Authorization'
        '400':
          description: Bad request
        '404':
          description: Email is exist
  /users/login:
    post:
      tags:
        - users
      summary: Đăng nhập
      description: Login vào hệ thống
      operationId: loginSystem
      requestBody:
        description: Tham số truyền lên
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: dangvanphuc7122001@gmail.com
                password:
                  type: string
                  example: Phuc#0122
                  writeOnly: true

        required: true
      responses:
        '200':
          description: Đăng nhập thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login successfull
                  result:
                    $ref: '#/components/schemas/Authorization'
        '400':
          description: Bad request
        '404':
          description: Email or password incorrect
  /conversations:
    post:
      tags:
        - conversations
      summary: Lấy conversations
      description: Lấy conversations giửa 2 người
      operationId: registerUser
      requestBody:
        description: Tham số truyền lên req.body
        content:
          application/json:
            schema:
              type: object
              properties:
                receiver_id:
                  type: string
                  format: objectId
                  example: 654d1bc73cf8981652c56a5a
        required: true
      responses:
        default:
          description: Get conversations successfull
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Register successfull
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Conversation'

        '403':
          description: Jwt Expired
components:
  schemas:
    RegisterUser:
      type: object
      properties:
        name:
          type: string
          example: 'Dang Van Phuc'
        email:
          type: string
          format: email
          example: dangvanphuc7122001@gmail.com
        password:
          type: string
          example: 'Phuc#0122'
          writeOnly: true
        confirm_password:
          type: string
          example: 'Phuc#0122'
          writeOnly: true
        date_of_birth:
          type: string
          format: date-time
    Authorization:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjU0YTZlMTY4MTk0ZmY5ZjFmNzQ0YzU1IiwidG9rZW5fdHlwZSI6MCwidmVyaWZ5IjoxLCJpYXQiOjE2OTk3MjYwNTgsImV4cCI6MTY5OTcyOTU5OH0.F-2eeagJwehAS2-elj_kZSUJG7FHFKOeXSMtOpnI0jY
        refresh_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjU0YTZlMTY4MTk0ZmY5ZjFmNzQ0YzU1IiwidG9rZW5fdHlwZSI6MSwidmVyaWZ5IjoxLCJleHAiOjE3MDgzMjcwNjgsImlhdCI6MTY5OTcyNjA1OH0.2uhc2xSw8jxeM9ZPWubNDkWrBJonFF-0PVRMJarwgfs
    Conversation:
      type: object
      properties:
        sender_id:
          type: string
          format: objectId
          example: 654d1bc73cf8981652c56a5a
        receiver_id:
          type: string
          format: objectId
          example: 654a6e168194ff9f1f744c55
        content:
          type: string
          example: Hello project
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
